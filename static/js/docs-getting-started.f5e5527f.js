(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{"./docs/gettingStarted.mdx":function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return i}));var n=a("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),s=(a("./node_modules/react/index.js"),a("./node_modules/@mdx-js/react/dist/index.es.js")),o={},r="wrapper";function i(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(s.b)(r,Object.assign({},o,a,{components:t,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"getting-started"},"Getting Started"),Object(s.b)("p",null,"This tutorial will introduce you to the basics of react-resux by building a counter application. The application will\nalso have the ability to confirm when a user increments/decrements its counter."),Object(s.b)("h2",{id:"tldr"},"TLDR"),Object(s.b)("p",null,"This tutorial is composed of both counterWithConnectResux and counterWithConnectResuxAndConfirmationDialog examples.\nIn the end connectResux calls will be replaced with our hooks api,\nsuch as in counterWithHooks example. To see all examples click ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/kayak/react-resux#demos"}),"here"),"."),Object(s.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(s.b)("p",null,"This tutorial assumes that you know the basics of how to use React. If you don't know what React is and how to use it,\nyou may wish to read ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://facebook.github.io/react/tutorial/tutorial.html"}),"this tutorial")," first."),Object(s.b)("h3",{id:"do-i-need-to-learn-redux"},"Do I need to learn redux?"),Object(s.b)("p",null,"React-resux is heavily based on Redux. A basic understanding of the Redux library will help when dealing with\ncomplex situations and connecting of the data with React components."),Object(s.b)("h3",{id:"do-i-need-to-learn-redux-saga"},"Do I need to learn redux-saga?"),Object(s.b)("p",null,"React-resux uses redux-saga for implementing asynchronous workflows. A basic understanding of the redux-saga library will help when dealing with\ncomplex situations and connecting of the data with React components."),Object(s.b)("h2",{id:"how-to-follow-this-tutorial"},"How to follow this tutorial"),Object(s.b)("p",null,"You can write the code for this tutorial in the browser using the CodeSandbox playground, or in your preferred\ncode editor (e.g. VSCode)."),Object(s.b)("h2",{id:"overview"},"Overview"),Object(s.b)("p",null,"React-resux is a state container that combines the simplicity and ease of mutable data with the traceability of immutable data and the reactiveness and performance of observable data."),Object(s.b)("p",null,"If the above sentence confused you, don't worry. We will dive deeper together and explore what it means step by step."),Object(s.b)("h4",{id:"example"},"Example:"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"import {Model} from 'react-resux';\nimport _ from 'lodash';\n\nasync function fetchApi(url) {\n  return await fetch(url).then(response => response.json());\n}\n\nexport const userModel = new Model({\n    // Mandatory options\n    namespace: 'users',\n    state: {\n        loading: {},\n        data: {},\n    },\n\n    // Optional options\n    selectors: {\n        loadingByUser: (state, userId) => _.get(state, `loading[${userId}]`, true),\n        userById: (state, userId) => _.get(state, `data[${userId}]`),\n    },\n    reducers: {\n        saveUser(state, {data, userId}) {\n          state.loading[userId] = false;\n          state.data[userId] = data;\n        },\n    },\n    effects: {\n        *fetchUser({userId}, {call, put}, {saveUser}) {\n            try {\n                const data = yield call(fetchApi, `http://jsonplaceholder.typicode.com/users/${userId}`);\n                yield put(saveUser({data, userId}));\n             } catch (error) {\n                console.log(error)\n             }\n        },\n    },\n});\n")),Object(s.b)("p",null,"The model will be used to generate the action types, actions, reducers, sagas and dispatchers for this particular\nentity (i.e. users). Below you can find a more in depth description on the many options that can be used during a\nmodel instantiation."),Object(s.b)("h3",{id:"model-options"},"Model Options"),Object(s.b)("p",null,"An object with a few key-value pairs. Being ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"/react-resux/interfaces/modeloptions.md#namespace"}),"namespace")," and\n",Object(s.b)("a",Object.assign({parentName:"p"},{href:"/react-resux/interfaces/modeloptions.md#state"}),"state")," mandatory, while\n",Object(s.b)("a",Object.assign({parentName:"p"},{href:"/react-resux/interfaces/modeloptions.md#optional-selectors"}),"selectors"),",\n",Object(s.b)("a",Object.assign({parentName:"p"},{href:"/react-resux/interfaces/modeloptions.md#optional-reducers"}),"reducers"),",\n",Object(s.b)("a",Object.assign({parentName:"p"},{href:"/react-resux/interfaces/modeloptions.md#optional-effects"}),"effects")," are optional. For more info see\n",Object(s.b)("a",Object.assign({parentName:"p"},{href:"/react-resux/interfaces/modeloptions.md"}),"this"),"."),Object(s.b)("h3",{id:"modelss-api"},"Models's API"),Object(s.b)("p",null,"For more info see ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"/react-resux/classes/model.md"}),"this"),"."),Object(s.b)("h2",{id:"subscriber"},"Subscriber"),Object(s.b)("p",null,"Subscribers provide a way to link models' effects/reducers, so that they get triggered by the same non-namespaced\naction type, on a leading, latest, or every action basis. That is, they provide the means for generating redux sagas\nemploying takeLeading, takeLatest, or takeEvery effects. Those models' action creators will be available within the\nsubscriber's effects."),Object(s.b)("h4",{id:"example-1"},"Example:"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"import {Subscriber} from 'react-resux';\nimport {userModel} from './models';\n\nexport const pageSubscriber = new Subscriber([userModel]).takeLatest(\n  'fetchPage', [\n    (action, {users}) => users.fetchUser(action),\n  ]\n);\n")),Object(s.b)("h3",{id:"subscribers-api"},"Subscriber's API"),Object(s.b)("p",null,"For more info see ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"/react-resux/classes/subscriber.md"}),"this"),"."))}i&&i===Object(i)&&Object.isExtensible(i)&&Object.defineProperty(i,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"docs/gettingStarted.mdx"}}),i.isMDXComponent=!0}}]);
//# sourceMappingURL=docs-getting-started.36990c2a959f5e40baab.js.map