(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{"./docs/index.mdx":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return r}));var a=n("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),s=(n("./node_modules/react/index.js"),n("./node_modules/@mdx-js/react/dist/index.es.js")),i={},o="wrapper";function r(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(s.b)(o,Object.assign({},i,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"introduction"},"Introduction"),Object(s.b)("p",null,"Opinionated, Redux abstraction with built-in immutability, async and more. Heavily dva inspired."),Object(s.b)("h2",{id:"benefits"},"Benefits"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"Easy to use and learn. Only a few public interfaces (i.e. combineModelReducers, subscribersRootSaga, Model, Subscriber, connectResux or equivalent hooks)."),Object(s.b)("li",{parentName:"ul"},"Boilerplate reduction (i.e. actions, dispatchers, reducers)."),Object(s.b)("li",{parentName:"ul"},"Immutability with normal JavaScript objects and arrays. No new APIs to learn!"),Object(s.b)("li",{parentName:"ul"},"Async, typescript, memoised selectors, and hooks support."),Object(s.b)("li",{parentName:"ul"},"Tiny footprint (i.e. ~6KB).")),Object(s.b)("h2",{id:"installation"},"Installation"),Object(s.b)("p",null,"Using npm:"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"npm install react-resux --save\n")),Object(s.b)("p",null,"Using yarn:"),Object(s.b)("pre",null,Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),"yarn add react-resux\n")),Object(s.b)("h2",{id:"getting-started"},"Getting started"),Object(s.b)("p",null,"We do a deep dive on how react-resux works in our ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"/react-resux/gettingStarted"}),"getting started")," tutorial. If you\nare curious about the concepts involved or just want to grasp how our API looks like, read the\n",Object(s.b)("a",Object.assign({parentName:"p"},{href:"/react-resux/concepts"}),"concepts")," section. For a good overview on how to test your code, see the\n",Object(s.b)("a",Object.assign({parentName:"p"},{href:"/react-resux/testing"}),"testing")," section."))}r&&r===Object(r)&&Object.isExtensible(r)&&Object.defineProperty(r,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"docs/index.mdx"}}),r.isMDXComponent=!0}}]);
//# sourceMappingURL=docs-index.a8e423490831aef2efdd.js.map