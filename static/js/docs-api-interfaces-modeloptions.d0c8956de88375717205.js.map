{"version":3,"sources":["/Users/llira/Code/whatever/docs/api/interfaces/modeloptions.md"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"static/js/docs-api-interfaces-modeloptions.7420e8b2.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"react-resux-api-reference-guide\"\n    }}>{`React-Resux API Reference Guide`}</h1>\n    <p>{`This reference guide lists all methods exposed by react-resux. Contributions like linguistic improvements, adding\nmore details to the descriptions or additional examples are highly appreciated! Please note that the docs are\ngenerated from source.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"../README.md\"\n      }}>{`react-resux`}</a>{` › `}<a parentName=\"p\" {...{\n        \"href\": \"modeloptions.md\"\n      }}>{`ModelOptions`}</a></p>\n    <h1 {...{\n      \"id\": \"interface-modeloptions\"\n    }}>{`Interface: ModelOptions`}</h1>\n    <p>{`Model options are used for initialising a `}<a parentName=\"p\" {...{\n        \"href\": \"../classes/model.md\"\n      }}>{`Model`}</a>{` instance.`}</p>\n    <h2 {...{\n      \"id\": \"hierarchy\"\n    }}>{`Hierarchy`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`ModelOptions`}</strong></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"index\"\n    }}>{`Index`}</h2>\n    <h3 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"modeloptions.md#optional-effects\"\n        }}>{`effects`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"modeloptions.md#namespace\"\n        }}>{`namespace`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"modeloptions.md#optional-reducers\"\n        }}>{`reducers`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"modeloptions.md#optional-selectors\"\n        }}>{`selectors`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"modeloptions.md#state\"\n        }}>{`state`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"properties-1\"\n    }}>{`Properties`}</h2>\n    <h3 {...{\n      \"id\": \"optional-effects\"\n    }}><inlineCode parentName=\"h3\">{`Optional`}</inlineCode>{` effects`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`effects`}</strong>{`? : `}<em parentName=\"p\">{`EffectMap`}</em></p>\n    <p><em parentName=\"p\">{`Defined in `}<a parentName=\"em\" {...{\n          \"href\": \"https://github.com/kayak/kaytum/blob/54a8b55/src/model.ts#L148\"\n        }}>{`model.ts:148`}</a></em></p>\n    <p>{`Effects are functions used for performing asynchronous state changes. An effect will be triggered whenever\nan action is dispatched, which contains an actionType equal to modelNamespace.effectName. They are wrapped\nby a `}<a parentName=\"p\" {...{\n        \"href\": \"https://redux-saga.js.org/docs/api/#takeeverypattern-saga-args\"\n      }}>{`takeEvery`}</a>{` effect, from redux-saga.\nAn effect function receives an action, an object with saga's effects, and the action creators as arguments\nrespectively. For a list of saga's effects available to you see\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://redux-saga.js.org/docs/api/#effect-creators\"\n      }}>{`this`}</a>{`.\nThe saga effects won't include takeLeading, takeLatest, and takeEvery blocking effects. For using those\nemploy a Subscriber instead.`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`example`}</inlineCode></strong>{`\n*fetchPostsByUser({ userId }, sagaEffects, actionCreators) {\ntry {\nconst data = yield sagaEffects.call(fetchApi, `}<inlineCode parentName=\"p\">{`http://jsonplaceholder.typicode.com/posts/?user=\\${userId}`}</inlineCode>{`);\nyield sagaEffects.put(actionCreators.saveUser({data, userId}));\n} catch (error) {\nconsole.log(error)\n}\n},`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"namespace\"\n    }}>{`namespace`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`namespace`}</strong>{`: `}<em parentName=\"p\">{`string`}</em></p>\n    <p><em parentName=\"p\">{`Defined in `}<a parentName=\"em\" {...{\n          \"href\": \"https://github.com/kayak/kaytum/blob/54a8b55/src/model.ts#L80\"\n        }}>{`model.ts:80`}</a></em></p>\n    <p>{`The namespace of a model will prefix all its reducers and effects' action types. This value must be unique\nand, as a matter of fact, resux will enforce it.`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`example`}</inlineCode></strong>{` namespace: 'pageA'`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`example`}</inlineCode></strong>{` namespace: 'pageB'`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"optional-reducers\"\n    }}><inlineCode parentName=\"h3\">{`Optional`}</inlineCode>{` reducers`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`reducers`}</strong>{`? : `}<em parentName=\"p\">{`ReducerMap`}</em></p>\n    <p><em parentName=\"p\">{`Defined in `}<a parentName=\"em\" {...{\n          \"href\": \"https://github.com/kayak/kaytum/blob/54a8b55/src/model.ts#L127\"\n        }}>{`model.ts:127`}</a></em></p>\n    <p>{`Reducers are functions used for synchronously changing the current state of a given model. A reducer will\nbe triggered whenever an action is dispatched, which contains a type equal to modelNamespace.reducerName.\nA reducer function receives the entire state and the action as arguments respectively. It shouldn't return\ndata, like vanilla reducers. Instead it should change the state argument in place. Resux uses\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/immerjs/immer\"\n      }}>{`immer`}</a>{` under the hood, which means that the state is made immutable\nby tracking property access.`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`example`}</inlineCode></strong>{`\nincrement(state, action) {\nstate.count += 1;\n}`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`example`}</inlineCode></strong>{`\ndecrement: (state, action) => {\nstate.count -= 1;\n}`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`example`}</inlineCode></strong>{`\nsaveData(state, { data, userId }) {\nstate.isLoading`}{`[userId]`}{` = false;\nstate.data`}{`[userId]`}{` = data;\n}`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"optional-selectors\"\n    }}><inlineCode parentName=\"h3\">{`Optional`}</inlineCode>{` selectors`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`selectors`}</strong>{`? : `}<em parentName=\"p\">{`SelectorMap`}</em></p>\n    <p><em parentName=\"p\">{`Defined in `}<a parentName=\"em\" {...{\n          \"href\": \"https://github.com/kayak/kaytum/blob/54a8b55/src/model.ts#L104\"\n        }}>{`model.ts:104`}</a></em></p>\n    <p>{`Selectors are functions that receive the entire state and returns a piece of it or, perhaps transform it.\nSelectors will memoize the returned data, in order to avoid any re-renders caused by shallow\ncomparing its variables. The first argument of a selector function is the namespaced state, following\nby any other positional arguments passed in an eventual call within a mapStateToProps. Last but not least,\nthe last argument is the entire redux state.`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`example`}</inlineCode></strong>{` count: (state) => state,`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`example`}</inlineCode></strong>{` userIds: (state, allState) => allState.modelNamespace.data.map(user => user.id),`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`example`}</inlineCode></strong>{` user: (state, userId) => state.data`}{`[userId]`}{`,`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`example`}</inlineCode></strong>{` isLoading: (state, userId, allState) => allState.modelNamespace.isLoading`}{`[userId]`}{`,`}</p>\n    <hr></hr>\n    <h3 {...{\n      \"id\": \"state\"\n    }}>{`state`}</h3>\n    <p>{`• `}<strong parentName=\"p\">{`state`}</strong>{`: `}<em parentName=\"p\">{`State`}</em></p>\n    <p><em parentName=\"p\">{`Defined in `}<a parentName=\"em\" {...{\n          \"href\": \"https://github.com/kayak/kaytum/blob/54a8b55/src/model.ts#L91\"\n        }}>{`model.ts:91`}</a></em></p>\n    <p>{`State represents the initial state of the model's reducer.`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`example`}</inlineCode></strong>{` state: 0`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`example`}</inlineCode></strong>{` state: []`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`example`}</inlineCode></strong>{` state: {\nisLoading: {},\ndata: {},\n}`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}