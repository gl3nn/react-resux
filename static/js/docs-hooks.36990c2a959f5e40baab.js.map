{"version":3,"sources":["/Users/llira/Code/whatever/docs/hooks.mdx"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mUAYMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,SADR,SAGA,uIACA,iBAAQ,CACN,GAAM,oBADR,oBAGA,4JACgB,+BAAGC,WAAW,KAAQ,CAClC,KAAQ,4CADI,OADhB,eAIA,iBAAQ,CACN,GAAM,qBADR,sBAGA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,+bAeL,iBAAQ,CACN,GAAM,mBADR,mBAGA,8KACsC,+BAAGA,WAAW,KAAQ,CACxD,KAAQ,2CAD0B,OADtC,eAIA,iBAAQ,CACN,GAAM,uBADR,sBAGA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,iaAaL,iBAAQ,CACN,GAAM,wBADR,wBAGA,2KAC8B,+BAAGA,WAAW,KAAQ,CAChD,KAAQ,gDADkB,OAD9B,eAIA,iBAAQ,CACN,GAAM,uBADR,sBAGA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,kc,oKAiBTJ,EAAWK,gBAAiB","file":"static/js/docs-hooks.1ba5325c.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"hooks\"\n    }}>{`Hooks`}</h1>\n    <p>{`React-Resux is a hooks-first library and it provides three distinct hooks as part of its public API. They are:`}</p>\n    <h2 {...{\n      \"id\": \"usemodelselector\"\n    }}>{`useModelSelector`}</h2>\n    <p>{`Returns the result of a given a selector, which has the state and perhaps additional arguments as arguments. For\nmore info see its `}<a parentName=\"p\" {...{\n        \"href\": \"/react-resux/README.md#usemodelselector\"\n      }}>{`API`}</a>{` reference.`}</p>\n    <h4 {...{\n      \"id\": \"read-data-example\"\n    }}>{`Read data example:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import {useModelSelector} from 'react-resux';\nimport {modelX} from './modelX';\n\nexport default function({page}) {\n  // We assume here that modelX has a selector defined.\n  // Fyi modelXSelectors arg will include all selectors defined on modelX.\n  const xData = useModelSelector(modelX, (state, modelXSelectors) => modelXSelectors.dataByPage(page));\n\n  return items.map(\n    item => <span key={item.id}>{xData.label}</span>\n  );\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usemodelactions\"\n    }}>{`useModelActions`}</h2>\n    <p>{`Returns an object with all reducer/effect action creators, defined in the provided model, already bound with\nredux's dispatch. For more info see its `}<a parentName=\"p\" {...{\n        \"href\": \"/react-resux/README.md#usemodelactions\"\n      }}>{`API`}</a>{` reference.`}</p>\n    <h4 {...{\n      \"id\": \"read-data-example-1\"\n    }}>{`Read data example:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import {useModelActions} from 'react-resux';\nimport {modelX} from './modelX';\n\nexport default function({page}) {\n  // We assume here that modelX has a reducer called swapValue defined.\n  // Fyi modelXActions will contain all reducers/effects defined on modelX.\n  const modelXActions = useModelActions(modelX);\n\n  return (<button onClick={modelXActions.swapValue}>Click here to swap value!</button>);\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usesubscriberactions\"\n    }}>{`useSubscriberActions`}</h2>\n    <p>{`Returns an object with all effect action creators, defined in the provided subscriber, already bound with redux's\ndispatch. For more info see its `}<a parentName=\"p\" {...{\n        \"href\": \"/react-resux/README.md#usesubscriberactions\"\n      }}>{`API`}</a>{` reference.`}</p>\n    <h4 {...{\n      \"id\": \"read-data-example-2\"\n    }}>{`Read data example:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import {useSubscriberAction} from 'react-resux';\nimport {subscriberX} from './modelX';\n\nexport default function({page}) {\n  // We assume here that modelX has an effect called fetchPageA defined.\n  // Fyi subscriberXActions will contain all effects defined on subscriberX.\n  const subscriberXActions = useSubscriberAction(subscriberX);\n\n  return (<button onClick={subscriberXActions.fetchPageA}>Click here to fetch page a!</button>)\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}