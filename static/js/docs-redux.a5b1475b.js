(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{"./docs/redux.mdx":function(e,r,n){"use strict";n.r(r),n.d(r,"default",(function(){return d}));var o=n("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),a=(n("./node_modules/react/index.js"),n("./node_modules/@mdx-js/react/dist/index.es.js")),s={},t="wrapper";function d(e){var r=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)(t,Object.assign({},s,n,{components:r,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"integrating-with-reduxredux-saga"},"Integrating with Redux/Redux Saga"),Object(a.b)("p",null,"Before you can use a model in your components, you have to hook its model's reducers into redux. The same applies for\nhooking the subscribers and model's effects into redux-saga. For such do:"),Object(a.b)("pre",null,Object(a.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"import {\n  combineModelReducers,\n  resuxRootSaga,\n} from 'react-resux';\nimport createSagaMiddleware from 'redux-saga';\nimport {\n  applyMiddleware,\n  combineReducers,\n  createStore,\n} from 'redux';\n\nimport {modelA, modelB} from './models';\nimport {subscriberX} from './subscribers';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(combineReducers({\n  ...combineModelReducers([modelA, modelB]),\n}), applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(() => resuxRootSaga([modelA, modelB, subscriberX]));\n")),Object(a.b)("p",null,"For more info on the API required for setting redux and saga up, see\n",Object(a.b)("a",Object.assign({parentName:"p"},{href:"/react-resux/README.md#combinemodelreducers"}),"combineModelReducers")," and\n",Object(a.b)("a",Object.assign({parentName:"p"},{href:"/react-resux/README.md#resuxrootsaga"}),"resuxRootSaga"),"."))}d&&d===Object(d)&&Object.isExtensible(d)&&Object.defineProperty(d,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"docs/redux.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=docs-redux.36990c2a959f5e40baab.js.map